import kotlinx.coroutines.*
import java.net.HttpURLConnection
import java.net.URL

fun main() = runBlocking {
    val websites = listOf(
        "https://www.example1.com/",
        "https://www.example2.com/",
        // Добавьте другие веб-сайты в список
    )

    // Запускаем проверку доступности веб-сайтов асинхронно
    val results = websites.map { url ->
        async {
            checkWebsite(url)
        }
    }

    // Ожидаем завершения всех проверок и выводим результаты
    results.awaitAll().forEachIndexed { index, isAvailable ->
        val url = websites[index]
        if (isAvailable) {
            println("Сайт $url доступен")
        } else {
            println("Сайт $url недоступен")
        }
    }
}

suspend fun checkWebsite(url: String): Boolean = withContext(Dispatchers.IO) {
    try {
        val connection = URL(url).openConnection() as HttpURLConnection
        connection.requestMethod = "HEAD"
        connection.connect()
        connection.responseCode == HttpURLConnection.HTTP_OK
    } catch (e: Exception) {
        false
    }
}
